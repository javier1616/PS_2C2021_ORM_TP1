// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP1_ORM_SOLIS_JAVIER.DB_manipulation;

namespace TP1_ORM_SOLIS_JAVIER.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210916180650_Migration-test-002")]
    partial class Migrationtest002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("FormaEntregaId");

                    b.ToTable("Comanda");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.ComandaMercaderia", b =>
                {
                    b.Property<int>("ComandaMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("ComandaMercaderiaId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("MercaderiaId");

                    b.ToTable("ComandaMercaderia");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.FormaEntrega", b =>
                {
                    b.Property<int>("FormaEntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FormaEntregaId");

                    b.ToTable("FormaEntrega");

                    b.HasData(
                        new
                        {
                            FormaEntregaId = 1,
                            Descripcion = "Salon"
                        },
                        new
                        {
                            FormaEntregaId = 2,
                            Descripcion = "Delivery"
                        },
                        new
                        {
                            FormaEntregaId = 3,
                            Descripcion = "Pedidos Ya"
                        });
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Funciones", b =>
                {
                    b.Property<int>("FuncionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Horario")
                        .HasColumnType("time");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<int?>("PeliculasPeliculaId")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.Property<int?>("SalasSalaId")
                        .HasColumnType("int");

                    b.HasKey("FuncionId");

                    b.HasIndex("PeliculasPeliculaId");

                    b.HasIndex("SalasSalaId");

                    b.ToTable("Funciones");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Mercaderia", b =>
                {
                    b.Property<int>("MercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("MercaderiaId");

                    b.HasIndex("TipoMercaderiaId");

                    b.ToTable("Mercaderia");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Peliculas", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PeliculaId");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            PeliculaId = 1,
                            Poster = "URL_Poster.png",
                            Sinopsis = "Accidentes en un parque de atracciones con dinosaurios",
                            Titulo = "Jurasic Park",
                            Trailer = "URL_trailer.mp4"
                        },
                        new
                        {
                            PeliculaId = 2,
                            Poster = "URL_Poster.png",
                            Sinopsis = "Un cazarrecompensas intenta encontrar el santo grial",
                            Titulo = "Indiana Jones y la Ultima Cruzada",
                            Trailer = "URL_trailer.mp4"
                        },
                        new
                        {
                            PeliculaId = 3,
                            Poster = "URL_Poster.png",
                            Sinopsis = "Mas carreras, mas explosiones, mas velocidad. Ahora con naves espaciales",
                            Titulo = "Rapido y Furioso 25: Carreras marcianas",
                            Trailer = "URL_trailer.mp4"
                        });
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Salas", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.HasKey("SalaId");

                    b.ToTable("Salas");

                    b.HasData(
                        new
                        {
                            SalaId = 1,
                            Capacidad = 50
                        },
                        new
                        {
                            SalaId = 2,
                            Capacidad = 100
                        },
                        new
                        {
                            SalaId = 3,
                            Capacidad = 1
                        });
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Tickets", b =>
                {
                    b.Property<Guid>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FuncionId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionesFuncionId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TicketId");

                    b.HasIndex("FuncionesFuncionId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.TipoMercaderia", b =>
                {
                    b.Property<int>("TipoMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMercaderiaId");

                    b.ToTable("TipoMercaderia");

                    b.HasData(
                        new
                        {
                            TipoMercaderiaId = 1,
                            Descripcion = "Entrada"
                        },
                        new
                        {
                            TipoMercaderiaId = 2,
                            Descripcion = "Minutas"
                        },
                        new
                        {
                            TipoMercaderiaId = 3,
                            Descripcion = "Pastas"
                        },
                        new
                        {
                            TipoMercaderiaId = 4,
                            Descripcion = "Parrilla"
                        },
                        new
                        {
                            TipoMercaderiaId = 5,
                            Descripcion = "Pizzas"
                        },
                        new
                        {
                            TipoMercaderiaId = 6,
                            Descripcion = "Sandwich"
                        },
                        new
                        {
                            TipoMercaderiaId = 7,
                            Descripcion = "Ensaladas"
                        },
                        new
                        {
                            TipoMercaderiaId = 8,
                            Descripcion = "Bebidas"
                        },
                        new
                        {
                            TipoMercaderiaId = 9,
                            Descripcion = "Cerveza Artesanal"
                        },
                        new
                        {
                            TipoMercaderiaId = 10,
                            Descripcion = "Postres"
                        });
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Comanda", b =>
                {
                    b.HasOne("TP1_ORM_SOLIS_JAVIER.Entities.FormaEntrega", "FormaEntrega")
                        .WithMany("Comanda")
                        .HasForeignKey("FormaEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaEntrega");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.ComandaMercaderia", b =>
                {
                    b.HasOne("TP1_ORM_SOLIS_JAVIER.Entities.Comanda", "Comanda")
                        .WithMany("ComandaMercaderia")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1_ORM_SOLIS_JAVIER.Entities.Mercaderia", "Mercaderia")
                        .WithMany("ComandaMercaderia")
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Mercaderia");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Funciones", b =>
                {
                    b.HasOne("TP1_ORM_SOLIS_JAVIER.Entities.Peliculas", "Peliculas")
                        .WithMany("Funciones")
                        .HasForeignKey("PeliculasPeliculaId");

                    b.HasOne("TP1_ORM_SOLIS_JAVIER.Entities.Salas", "Salas")
                        .WithMany("Funciones")
                        .HasForeignKey("SalasSalaId");

                    b.Navigation("Peliculas");

                    b.Navigation("Salas");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Mercaderia", b =>
                {
                    b.HasOne("TP1_ORM_SOLIS_JAVIER.Entities.TipoMercaderia", "TipoMercaderia")
                        .WithMany("Mercaderia")
                        .HasForeignKey("TipoMercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMercaderia");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Tickets", b =>
                {
                    b.HasOne("TP1_ORM_SOLIS_JAVIER.Entities.Funciones", "Funciones")
                        .WithMany("Tickets")
                        .HasForeignKey("FuncionesFuncionId");

                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Comanda", b =>
                {
                    b.Navigation("ComandaMercaderia");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.FormaEntrega", b =>
                {
                    b.Navigation("Comanda");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Funciones", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Mercaderia", b =>
                {
                    b.Navigation("ComandaMercaderia");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Peliculas", b =>
                {
                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.Salas", b =>
                {
                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("TP1_ORM_SOLIS_JAVIER.Entities.TipoMercaderia", b =>
                {
                    b.Navigation("Mercaderia");
                });
#pragma warning restore 612, 618
        }
    }
}
